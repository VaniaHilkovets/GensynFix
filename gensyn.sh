#!/bin/bash

set -euo pipefail

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã—Ö–æ–¥–∞
safe_exit() {
    echo "[!] –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–æ–π: $1"
    exit 1
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
trap 'safe_exit "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–æ–∫–µ $LINENO"' ERR

# –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
BASE_DIR="/root"
REPO_URL="https://github.com/VaniaHilkovets/GensynFix.git"
LOGIN_WAIT_TIMEOUT=10
NVM_DIR="$HOME/.nvm"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
install_base_packages() {
    echo "[+] –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã..."
    apt update || safe_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã"
    apt install -y curl sudo tmux lsof git htop nano rsync python3 python3-pip build-essential || safe_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã"
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –¥–ª—è python –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if [ ! -e /usr/bin/python ]; then
        ln -s /usr/bin/python3 /usr/bin/python
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –¥–ª—è pip –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if [ ! -e /usr/bin/pip ]; then
        ln -s /usr/bin/pip3 /usr/bin/pip
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ NVM –∏ Node.js 20
install_nvm_and_node() {
    echo "[+] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º NVM..."
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é NVM –µ—Å–ª–∏ –µ—Å—Ç—å
    rm -rf "$NVM_DIR"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º NVM
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash || safe_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å NVM"
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º NVM –≤ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
    
    # –î–æ–±–∞–≤–ª—è–µ–º NVM –≤ bashrc –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç
    if ! grep -q "NVM_DIR" ~/.bashrc; then
        echo 'export NVM_DIR="$HOME/.nvm"' >> ~/.bashrc
        echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> ~/.bashrc
        echo '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"' >> ~/.bashrc
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ NVM —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    if ! command -v nvm &> /dev/null; then
        safe_exit "NVM –Ω–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    fi
    
    echo "[+] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js 20..."
    nvm install 20 || safe_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node.js 20"
    nvm use 20 || safe_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ Node.js 20"
    nvm alias default 20 || safe_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node.js 20 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    NODE_VERSION=$(node -v)
    echo "[+] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è Node.js: $NODE_VERSION"
    
    if [[ ! "$NODE_VERSION" =~ ^v20\. ]]; then
        safe_exit "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è Node.js: $NODE_VERSION"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_python_deps() {
    echo "[+] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    
    # –û–±–Ω–æ–≤–ª—è–µ–º pip
    pip install --upgrade pip || safe_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å pip"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º jinja2
    pip install --upgrade "jinja2>=3.1.0" || safe_exit "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å jinja2"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é jinja2
    JINJA_VERSION=$(pip show jinja2 2>/dev/null | grep Version | awk '{print $2}' || echo "–Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    echo "[+] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è jinja2: $JINJA_VERSION"
}

# –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é
show_menu() {
    echo -e "\n===== –ú–µ–Ω—é GensynFix ====="
    echo "1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "2) –õ–æ–≥–∏–Ω –Ω–æ–¥—ã"
    echo "3) –ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã –≤ tmux"
    echo "4) –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
    echo "5) –û–±–Ω–æ–≤–∏—Ç—å GensynFix"
    echo "6) –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–æ–¥—ã"
    echo "7) –í—ã–π—Ç–∏"
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ –Ω–æ–¥–∞
check_node_installed() {
    if [ ! -d "$BASE_DIR/GensynFix" ]; then
        echo "[!] –ù–æ–¥–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ (–æ–ø—Ü–∏—è 1)."
        return 1
    fi
    echo "[+] –ù–æ–¥–∞ –Ω–∞–π–¥–µ–Ω–∞."
    return 0
}

# –û–±–µ—Å–ø–µ—á–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É NVM –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
ensure_nvm() {
    export NVM_DIR="$HOME/.nvm"
    if [ -s "$NVM_DIR/nvm.sh" ]; then
        \. "$NVM_DIR/nvm.sh"
        nvm use 20 &>/dev/null || true
    else
        safe_exit "NVM –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–æ–¥—ã (–æ–ø—Ü–∏—è 1)"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Ä—Ç
check_port() {
    local port=$1
    if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null 2>&1; then
        return 0  # –ø–æ—Ä—Ç –∑–∞–Ω—è—Ç
    else
        return 1  # –ø–æ—Ä—Ç —Å–≤–æ–±–æ–¥–µ–Ω
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã
run_setup() {
    echo "[+] –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–æ–¥—ã..."
    
    install_base_packages
    install_nvm_and_node
    install_python_deps
    
    echo "[+] –ö–ª–æ–Ω–∏—Ä—É–µ–º GensynFix..."
    rm -rf "$BASE_DIR/GensynFix"
    
    git clone "$REPO_URL" "$BASE_DIR/GensynFix" || safe_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
    
    # –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º–∏
    find "$BASE_DIR/GensynFix" -name "*.sh" -exec chmod +x {} \; || true
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ—Ä—Ç –¥–ª—è –Ω–æ–¥—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç 3000)
    DIR="$BASE_DIR/GensynFix"
    if [ -f "$DIR/run_rl_swarm.sh" ]; then
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é LOGIN_PORT –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if ! grep -q "LOGIN_PORT=" "$DIR/run_rl_swarm.sh"; then
            sed -i '1i LOGIN_PORT=${LOGIN_PORT:-3000}' "$DIR/run_rl_swarm.sh"
        fi
        
        # –ó–∞–º–µ–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É –∑–∞–ø—É—Å–∫–∞ yarn —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø–æ—Ä—Ç–∞
        sed -i 's|yarn start >> "$ROOT/logs/yarn.log" 2>&1 &|PORT=$LOGIN_PORT yarn start >> "$ROOT/logs/yarn.log" 2>\&1 \&|' "$DIR/run_rl_swarm.sh"
    fi
    
    echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ."
}

# –õ–æ–≥–∏–Ω –Ω–æ–¥—ã
run_login() {
    ensure_nvm
    
    if ! check_node_installed; then
        return 1
    fi
    
    DIR="$BASE_DIR/GensynFix"
    PORT=3000
    
    echo "[+] –ù–∞—á–∏–Ω–∞–µ–º –ª–æ–≥–∏–Ω –Ω–æ–¥—ã (–ø–æ—Ä—Ç $PORT)..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—Ä—Ç —Å–≤–æ–±–æ–¥–µ–Ω
    if check_port $PORT; then
        echo "[!] –ü–æ—Ä—Ç $PORT —É–∂–µ –∑–∞–Ω—è—Ç. –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º..."
        fuser -k $PORT/tcp 2>/dev/null || true
        sleep 2
    fi
    
    echo "[+] –ó–∞–ø—É—Å–∫–∞–µ–º tmux-—Å–µ—Å—Å–∏—é node –Ω–∞ –ø–æ—Ä—Ç—É $PORT"
    tmux kill-session -t "node" 2>/dev/null || true
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É
    tmux new-session -d -s "node" -n run "cd $DIR && export NVM_DIR='$HOME/.nvm' && [ -s '$NVM_DIR/nvm.sh' ] && \. '$NVM_DIR/nvm.sh' && nvm use 20 && LOGIN_PORT=$PORT ./run_rl_swarm.sh"
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    echo -n "[*] –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã... "
    local attempts=0
    while [ $attempts -lt 60 ]; do
        if tmux capture-pane -t "node" -p 2>/dev/null | grep -q "Started server process\|Server listening\|ready"; then
            echo "OK"
            break
        fi
        sleep 2
        attempts=$((attempts + 1))
    done
    
    if [ $attempts -eq 60 ]; then
        echo "TIMEOUT"
        echo "[!] –ù–æ–¥–∞ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∞—Å—å –∑–∞ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è"
        tmux capture-pane -t "node" -p | tail -20
        return 1
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–∞
    echo "[+] –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–∞ $PORT"
    TUNNEL_SESSION="tunnel"
    tmux kill-session -t "$TUNNEL_SESSION" 2>/dev/null || true
    rm -f "/tmp/tunnel.log"
    
    tmux new-session -d -s "$TUNNEL_SESSION" "ssh -o StrictHostKeyChecking=no -R 80:localhost:$PORT nokey@localhost.run 2>&1 | tee /tmp/tunnel.log"
    
    # –ñ–¥–µ–º —Å—Å—ã–ª–∫—É
    echo -n "[*] –û–∂–∏–¥–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏... "
    local link_attempts=0
    LINK=""
    while [ $link_attempts -lt 30 ]; do
        if [ -f "/tmp/tunnel.log" ]; then
            LINK=$(grep -o 'https://[^ ]*' "/tmp/tunnel.log" 2>/dev/null | grep '\.lhr\.life' | head -n1 || true)
            if [ -n "$LINK" ]; then
                echo "OK"
                break
            fi
        fi
        sleep 2
        link_attempts=$((link_attempts + 1))
    done
    
    if [ -z "$LINK" ]; then
        echo "TIMEOUT"
        echo "[!] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –ª–æ–≥–∏–Ω–∞"
        return 1
    fi
    
    echo -e "\nüîó –õ–æ–≥–∏–Ω –Ω–æ–¥—ã: $LINK"
    echo "–û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ª–æ–≥–∏–Ω–∞"
    
    read -p "–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ª–æ–≥–∏–Ω–∞ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–±—Ä–æ—Å
    echo "[+] –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–±—Ä–æ—Å $TUNNEL_SESSION"
    tmux kill-session -t "$TUNNEL_SESSION" 2>/dev/null || true
    rm -f "/tmp/tunnel.log"
    
    echo -e "\n‚è≥ –ñ–¥–µ–º $LOGIN_WAIT_TIMEOUT —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π..."
    sleep $LOGIN_WAIT_TIMEOUT
    
    # –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é –ª–æ–≥–∏–Ω–∞
    tmux kill-session -t "node" 2>/dev/null || true
    
    echo "‚úÖ –õ–æ–≥–∏–Ω –∑–∞–≤–µ—Ä—à–µ–Ω. –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É."
}

# –ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã
run_start() {
    ensure_nvm
    
    if ! check_node_installed; then
        return 1
    fi
    
    echo "[+] –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É..."
    
    DIR="$BASE_DIR/GensynFix"
    PORT=3000
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Å–∫—Ä–∏–ø—Ç—ã –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–µ
    find "$DIR" -name "*.sh" -exec chmod +x {} \; 2>/dev/null || true
    
    SESSION="gensyn_node"
    tmux kill-session -t $SESSION 2>/dev/null || true
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É —Å –∑–∞–≥—Ä—É–∑–∫–æ–π NVM
    CMD="cd $DIR && export NVM_DIR='$HOME/.nvm' && [ -s '$NVM_DIR/nvm.sh' ] && \. '$NVM_DIR/nvm.sh' && nvm use 20 && LOGIN_PORT=$PORT ./auto_restart.sh"
    
    tmux new-session -d -s $SESSION -n "node" -x 120 -y 30 "$CMD"
    
    echo "‚úÖ –ù–æ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ tmux —Å–µ—Å—Å–∏–∏ '$SESSION'"
    echo "–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: tmux attach -t $SESSION"
    echo "–î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+B, –∑–∞—Ç–µ–º D"
    
    read -p "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ tmux —Å–µ—Å—Å–∏–∏ —Å–µ–π—á–∞—Å? (y/N): " ATTACH
    if [[ "$ATTACH" =~ ^[Yy]$ ]]; then
        tmux attach -t $SESSION
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ
run_update() {
    ensure_nvm
    
    if ! check_node_installed; then
        return 1
    fi
    
    echo "[+] –û–±–Ω–æ–≤–ª—è–µ–º GensynFix..."
    
    DIR="$BASE_DIR/GensynFix"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–ø–∫—É
    if [ -d "$DIR/.git" ]; then
        echo "[+] –û–±–Ω–æ–≤–ª—è–µ–º GensynFix –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
        cd "$DIR"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
        [ -f "swarm.pem" ] && cp "swarm.pem" "/tmp/swarm.pem.backup"
        
        if ! git pull --ff-only 2>/dev/null; then
            echo "[!] –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
            git fetch origin || safe_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
            git reset --hard origin/$(git rev-parse --abbrev-ref HEAD) || safe_exit "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
        fi
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
        [ -f "/tmp/swarm.pem.backup" ] && cp "/tmp/swarm.pem.backup" "swarm.pem" && rm "/tmp/swarm.pem.backup"
        
        cd - >/dev/null
    else
        echo "[!] –ü–∞–ø–∫–∞ $DIR –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º."
        return 1
    fi
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ—Ä—Ç –∑–∞–Ω–æ–≤–æ
    find "$DIR" -name "*.sh" -exec chmod +x {} \; 2>/dev/null || true
    
    if [ -f "$DIR/run_rl_swarm.sh" ]; then
        if ! grep -q "LOGIN_PORT=" "$DIR/run_rl_swarm.sh"; then
            sed -i '1i LOGIN_PORT=${LOGIN_PORT:-3000}' "$DIR/run_rl_swarm.sh"
        fi
        sed -i 's|yarn start >> "$ROOT/logs/yarn.log" 2>&1 &|PORT=$LOGIN_PORT yarn start >> "$ROOT/logs/yarn.log" 2>\&1 \&|' "$DIR/run_rl_swarm.sh"
    fi
    
    echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ."
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–æ–¥—ã
show_status() {
    if ! check_node_installed; then
        return 1
    fi
    
    echo -e "\n===== –°—Ç–∞—Ç—É—Å –Ω–æ–¥—ã ====="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º tmux —Å–µ—Å—Å–∏–∏
    SESSIONS=$(tmux list-sessions 2>/dev/null | grep -E "(node|gensyn_node)" | awk -F: '{print $1}' || true)
    if [ -n "$SESSIONS" ]; then
        echo "–ê–∫—Ç–∏–≤–Ω—ã–µ tmux —Å–µ—Å—Å–∏–∏:"
        echo "$SESSIONS" | while read session; do
            echo "  - $session"
        done
    else
        echo "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö tmux —Å–µ—Å—Å–∏–π"
    fi
    
    echo -e "\n–ü–æ—Ä—Ç –∏ –ø—Ä–æ—Ü–µ—Å—Å:"
    PORT=3000
    if check_port $PORT; then
        PID=$(lsof -ti:$PORT)
        echo "  –ù–æ–¥–∞ (–ø–æ—Ä—Ç $PORT): –ê–ö–¢–ò–í–ù–ê (PID: $PID)"
    else
        echo "  –ù–æ–¥–∞ (–ø–æ—Ä—Ç $PORT): –ù–ï–ê–ö–¢–ò–í–ù–ê"
    fi
    
    echo -e "\n–ü–∞–ø–∫–∞ –Ω–æ–¥—ã:"
    DIR="$BASE_DIR/GensynFix"
    if [ -d "$DIR" ]; then
        SIZE=$(du -sh "$DIR" 2>/dev/null | cut -f1)
        echo "  $DIR: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ($SIZE)"
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        if [ -f "$DIR/swarm.pem" ]; then
            echo "  –ö–ª—é—á swarm.pem: –Ω–∞–π–¥–µ–Ω"
        else
            echo "  –ö–ª—é—á swarm.pem: –ù–ï –ù–ê–ô–î–ï–ù"
        fi
        
        if [ -d "$DIR/logs" ]; then
            LOG_COUNT=$(ls -1 "$DIR/logs/" 2>/dev/null | wc -l)
            echo "  –õ–æ–≥–∏: $LOG_COUNT —Ñ–∞–π–ª–æ–≤"
        fi
    else
        echo "  $DIR: –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢"
    fi
}
            echo "  $DIR: –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢"
        fi
    done
}

# –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã
run_cleanup() {
    echo "‚ö†Ô∏è  –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É –∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ? (y/N):"
    read -r YES
    
    if [[ ! "$YES" =~ ^[Yy]$ ]]; then
        echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
        return 0
    fi
    
    echo "üíÄ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã..."
    
    # –£–±–∏–≤–∞–µ–º tmux —Å–µ—Å—Å–∏–∏
    tmux list-sessions 2>/dev/null | grep -E "(node|gensyn_node|tunnel)" | awk -F: '{print $1}' | xargs -I{} tmux kill-session -t {} 2>/dev/null || true
    
    # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –ø–æ –∏–º–µ–Ω–∞–º
    pkill -f GensynFix 2>/dev/null || true
    pkill -f run_rl_swarm.sh 2>/dev/null || true
    pkill -f auto_restart.sh 2>/dev/null || true
    
    # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç 3000
    fuser -k 3000/tcp 2>/dev/null || true
    
    sleep 3
    
    echo "üßπ –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É..."
    rm -rf "$BASE_DIR/GensynFix" 2>/dev/null || true
    rm -f /tmp/tunnel*.log 2>/dev/null || true
    
    echo "‚úÖ –ù–æ–¥–∞ —É–¥–∞–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
main() {
    echo "=== GensynFix Manager ==="
    echo "–í–µ—Ä—Å–∏—è: 2.0 (–æ–¥–Ω–∞ –Ω–æ–¥–∞ —Å NVM)"
    
    while true; do
        show_menu
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [1-7]: " CHOICE
        
        case "$CHOICE" in
            1) run_setup ;;
            2) run_login ;;
            3) run_start ;;
            4) run_cleanup ;;
            5) run_update ;;
            6) show_status ;;
            7) echo "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"; exit 0 ;;
            *) echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 7." ;;
        esac
        
        echo -e "\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
        read -r
    done
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
