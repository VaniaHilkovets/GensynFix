#!/bin/bash

set -euo pipefail

apt update
apt install -y curl sudo tmux lsof git htop nvtop nano rsync

BASE_DIR="/root"
REPO_URL="https://github.com/VaniaHilkovets/GensynFix.git"
LOGIN_WAIT_TIMEOUT=10
LOG_FILE="/root/gensynfix_install.log"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
log() {
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

show_menu() {
  echo -e "\n===== –ú–µ–Ω—é GensynFix ====="
  echo "1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—ã"
  echo "2) –õ–æ–≥–∏–Ω –ø–æ –æ—á–µ—Ä–µ–¥–∏"
  echo "3) –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –Ω–æ–¥ –≤ tmux"
  echo "4) –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –Ω–æ–¥—ã"
  echo "5) –û–±–Ω–æ–≤–∏—Ç—å GensynFix"
  echo "6) –í—ã–π—Ç–∏"
}

get_current_count() {
  COUNT=$(ls -d "$BASE_DIR"/GensynFix* 2>/dev/null | wc -l)
  if [ "$COUNT" -eq 0 ]; then
    log "[!] –ù–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–¥. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ (–æ–ø—Ü–∏—è 1)."
    exit 1
  fi
  log "[+] –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $COUNT –Ω–æ–¥."
}

ensure_node_version() {
  log "[+] –ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js..."

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
  CURRENT_MAJOR=0
  if command -v node >/dev/null 2>&1; then
    CURRENT_MAJOR=$(node -v | sed 's/^v\([0-9]\+\).*/\1/')
    log "[+] –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è Node.js: $(node -v), –ø—É—Ç—å: $(which node)"
  fi

  # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≤–µ—Ä—Å–∏–∏ Node.js –∏ npm
  if [ "$CURRENT_MAJOR" -ne 20 ]; then
    log "[!] –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã Node.js –∏–ª–∏ npm. –£–¥–∞–ª—è–µ–º –≤—Å–µ –≤–µ—Ä—Å–∏–∏..."
    apt purge -y nodejs npm
    rm -rf /usr/local/bin/node /usr/local/bin/npm /usr/bin/node /usr/bin/npm /usr/local/lib/node_modules
    hash -r  # –û—á–∏—â–∞–µ–º –∫—ç—à PATH
  fi

  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js 20
  log "[!] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js 20..."
  curl -fsSL https://deb.nodesource.com/setup_20.x | bash - >> "$LOG_FILE" 2>&1
  apt update >> "$LOG_FILE" 2>&1
  apt install -y nodejs >> "$LOG_FILE" 2>&1

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
  INST_MAJOR=$(node -v | sed 's/^v\([0-9]\+\).*/\1/')
  if [ "$INST_MAJOR" -ne 20 ]; then
    log "[!] –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node.js 20. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $(node -v), –ø—É—Ç—å: $(which node)"
    log "[!] –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–µ–π, –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã."
  else
    log "[+] Node.js 20 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node -v), –ø—É—Ç—å: $(which node)"
  fi

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º pip3
  if ! command -v pip3 >/dev/null 2>&1; then
    log "[!] pip3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    apt update && apt install -y python3-pip
    ln -sf "$(which pip3)" /usr/bin/pip
  fi

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º jinja2
  JINJA_VERSION=$(pip3 show jinja2 2>/dev/null | grep Version | awk '{print $2}')
  if [ -z "$JINJA_VERSION" ] || [ "$(echo "$JINJA_VERSION" | awk -F. '{print ($1*1000+$2*10+$3)}')" -lt 3100 ]; then
    log "[!] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º jinja2>=3.1.0..."
    pip3 install --upgrade jinja2 >> "$LOG_FILE" 2>&1
  fi
  log "[+] jinja2 –≤–µ—Ä—Å–∏—è: $(pip3 show jinja2 | grep Version | awk '{print $2}')"
}

run_setup() {
  ensure_node_version
  read -p "–°–∫–æ–ª—å–∫–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –Ω–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å? " COUNT
  log "[+] –ö–ª–æ–Ω–∏—Ä—É–µ–º GensynFix..."
  rm -rf "$BASE_DIR/GensynFix"
  git clone "$REPO_URL" "$BASE_DIR/GensynFix" >> "$LOG_FILE" 2>&1
  chmod +x "$BASE_DIR/GensynFix/"*.sh

  for i in $(seq 2 "$COUNT"); do
    cp -r "$BASE_DIR/GensynFix" "$BASE_DIR/GensynFix$i"
    chmod +x "$BASE_DIR/GensynFix$i/"*.sh
  done

  for i in $(seq 1 "$COUNT"); do
    FILE="$BASE_DIR/GensynFix"
    [ "$i" -gt 1 ] && FILE="$BASE_DIR/GensynFix$i"
    grep -q "LOGIN_PORT=" "$FILE/run_rl_swarm.sh" || echo "LOGIN_PORT=\${LOGIN_PORT:-3000}" >> "$FILE/run_rl_swarm.sh"
    sed -i 's|yarn start >> "$ROOT/logs/yarn.log" 2>&1 &|PORT=$LOGIN_PORT yarn start >> "$ROOT/logs/yarn.log" 2>&1 &|' "$FILE/run_rl_swarm.sh"
  done

  log "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
  echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
}

run_login_sequential() {
  ensure_node_version
  get_current_count

  for i in $(seq 1 "$COUNT"); do
    DIR="$BASE_DIR/GensynFix"
    [ "$i" -gt 1 ] && DIR="$BASE_DIR/GensynFix$i"
    PORT=$((2999 + i))

    log "[+] –ó–∞–ø—É—Å–∫–∞–µ–º tmux-—Å–µ—Å—Å–∏—é node$i –Ω–∞ –ø–æ—Ä—Ç—É $PORT"
    tmux kill-session -t "node$i" 2>/dev/null
    tmux new-session -d -s "node$i" -n run "cd $DIR && LOGIN_PORT=$PORT ./run_rl_swarm.sh"

    echo -n "[*] –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã... "
    while ! tmux capture-pane -t "node$i" -p | grep -q "Started server process"; do
      sleep 1
    done
    log "OK"
    echo "OK"

    log "[+] –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–∞ $PORT"
    TUNNEL_SESSION="tunnel$i"
    tmux kill-session -t "$TUNNEL_SESSION" 2>/dev/null
    tmux new-session -d -s "$TUNNEL_SESSION" "ssh -o StrictHostKeyChecking=no -R 80:localhost:$PORT nokey@localhost.run | tee /tmp/tunnel$i.log"

    echo "[*] –û–∂–∏–¥–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏..."
    until LINK=$(grep -o 'https://[^ ]*' /tmp/tunnel$i.log | grep '\.lhr\.life' | head -n1); do
      sleep 5
    done
    log "‚û°Ô∏è –õ–æ–≥–∏–Ω –Ω–æ–¥—ã $i: $LINK"
    echo "‚û°Ô∏è –õ–æ–≥–∏–Ω –Ω–æ–¥—ã $i: $LINK"

    read -p "–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ª–æ–≥–∏–Ω–∞ ‚Äî –∂–º–∏ Enter..."

    log "[+] –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–±—Ä–æ—Å $TUNNEL_SESSION"
    tmux kill-session -t "$TUNNEL_SESSION" 2>/dev/null
  done

  log "‚è≥ –í—Å–µ –Ω–æ–¥—ã –∑–∞–ª–æ–≥–∏–Ω–µ–Ω—ã. –ñ–¥–µ–º $LOGIN_WAIT_TIMEOUT —Å–µ–∫—É–Ω–¥..."
  echo "‚è≥ –í—Å–µ –Ω–æ–¥—ã –∑–∞–ª–æ–≥–∏–Ω–µ–Ω—ã. –ñ–¥–µ–º $LOGIN_WAIT_TIMEOUT —Å–µ–∫—É–Ω–¥..."
  sleep "$LOGIN_WAIT_TIMEOUT"

  for i in $(seq 1 "$COUNT"); do
    tmux kill-session -t "tunnel$i" 2>/dev/null
    tmux kill-session -t "node$i" 2>/dev/null
  done
  log "[‚úì] –í—Å–µ —Å–µ—Å—Å–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã. –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É."
  echo "[‚úì] –í—Å–µ —Å–µ—Å—Å–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã. –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É."
}

run_start() {
  ensure_node_version
  get_current_count

  for i in $(seq 1 "$COUNT"); do
    DIR="$BASE_DIR/GensynFix"
    [ "$i" -gt 1 ] && DIR="$BASE_DIR/GensynFix$i"
    chmod +x "$DIR/auto_restart.sh" 2>/dev/null
  done

  [ ! -e /usr/bin/python ] && ln -sf /usr/bin/python3 /usr/bin/python
  SESSION="gensyn_start"
  tmux kill-session -t "$SESSION" 2>/dev/null

  for i in $(seq 1 "$COUNT"); do
    DIR="$BASE_DIR/GensynFix"
    [ "$i" -gt 1 ] && DIR="$BASE_DIR/GensynFix$i"
    PORT=$((2999 + i))
    CMD="cd $DIR && LOGIN_PORT=$PORT ./auto_restart.sh"

    if [ "$i" -eq 1 ]; then
      tmux new-session -d -s "$SESSION" -n "node$i" -x 800 -y 100 "$CMD"
    else
      tmux split-window -t "$SESSION" -h "$CMD"
    fi
  done

  tmux select-layout -t "$SESSION" tiled
  tmux attach -t "$SESSION"
}

run_update() {
  ensure_node_version
  get_current_count

  if [ -d "$BASE_DIR/GensynFix/.git" ]; then
    log "[+] –û–±–Ω–æ–≤–ª—è–µ–º GensynFix..."
    pushd "$BASE_DIR/GensynFix" >/dev/null
    if ! git pull --ff-only; then
      log "[!] –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å fast-forward pull, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º..."
      git fetch origin
      git reset --hard origin/main
    fi
    popd >/dev/null
  else
    log "[!] –ü–∞–ø–∫–∞ $BASE_DIR/GensynFix –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º."
  fi

  log "[+] –û–±–Ω–æ–≤–ª—è–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã GensynFix..."
  for i in $(seq 2 "$COUNT"); do
    DEST="$BASE_DIR/GensynFix$i"
    if [ -d "$DEST" ]; then
      log "[+] –û–±–Ω–æ–≤–ª—è–µ–º $DEST"
      rsync -a --exclude='.git' --exclude='swarm.pem' --exclude='modal-login/temp-data/' "$BASE_DIR/GensynFix/" "$DEST/"
      chmod +x "$DEST/auto_restart.sh"
    fi
  done

  for i in $(seq 1 "$COUNT"); do
    FILE="$BASE_DIR/GensynFix"
    [ "$i" -gt 1 ] && FILE="$BASE_DIR/GensynFix$i"
    if [ -f "$FILE/run_rl_swarm.sh" ]; then
      grep -q "LOGIN_PORT=" "$FILE/run_rl_swarm.sh" || echo "LOGIN_PORT=\${LOGIN_PORT:-3000}" >> "$FILE/run_rl_swarm.sh"
      sed -i 's|yarn start >> "$ROOT/logs/yarn.log" 2>&1 &|PORT=$LOGIN_PORT yarn start >> "$ROOT/logs/yarn.log" 2>&1 &|' "$FILE/run_rl_swarm.sh"
    fi
  done

  log "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ."
  echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ."
}

while true; do
  show_menu
  read -p "–í—ã–±–µ—Ä–∏ [1-6]: " CHOICE
  case "$CHOICE" in
    1) run_setup ;;
    2) run_login_sequential ;;
    3) run_start ;;
    4)
      echo "–£–¥–∞–ª–∏—Ç—å –í–°–Å (y/N)? "
      read -r YES
      if [[ "$YES" =~ ^[Yy]$ ]]; then
        log "üíÄ –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã..."
        pkill -f GensynFix
        pkill -f run_rl_swarm.sh
        pkill -f auto_restart.sh
        pkill -f yarn
        pkill -f node
        pkill -f tmux

        log "üßπ –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫–∏..."
        rm -rf /root/GensynFix*

        log "‚úÖ –í—Å—ë —É–¥–∞–ª–µ–Ω–æ."
        echo "‚úÖ –í—Å—ë —É–¥–∞–ª–µ–Ω–æ."
      else
        log "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ."
        echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ."
      fi
      ;;
    5) run_update ;;
    6) exit 0 ;;
    *) echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä." ;;
  esac
done
