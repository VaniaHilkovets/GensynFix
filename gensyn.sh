#!/bin/bash

set -euo pipefail

apt update
apt install -y curl sudo tmux lsof git htop nvtop nano rsync

BASE_DIR="/root"
REPO_URL="https://github.com/VaniaHilkovets/GensynFix.git"
LOGIN_WAIT_TIMEOUT=10

show_menu() {
  echo -e "\n===== –ú–µ–Ω—é GensynFix ====="
  echo "1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—ã"
  echo "2) –õ–æ–≥–∏–Ω –ø–æ –æ—á–µ—Ä–µ–¥–∏ (–æ–¥–Ω–∞ –Ω–æ–¥–∞ -> –ø—Ä–æ–±—Ä–æ—Å -> –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ)"
  echo "3) –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –Ω–æ–¥ –≤ tmux"
  echo "4) –£–¥–∞–ª–∏—Ç—å –≤—Å—ë –Ω–æ–¥—ã"
  echo "5) –û–±–Ω–æ–≤–∏—Ç—å GensynFix"
  echo "6) –í—ã–π—Ç–∏"
}

get_current_count() {
  COUNT=$(ls -d "$BASE_DIR"/GensynFix* 2>/dev/null | wc -l)
  if [ "$COUNT" -eq 0 ]; then
    echo "[!] –ù–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–¥. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ (–æ–ø—Ü–∏—è 1)."
    exit 1
  fi
  echo "[+] –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ $COUNT –Ω–æ–¥."
}

ensure_node_version() {
  export NVM_DIR="$HOME/.nvm"
  if [ -s "$NVM_DIR/nvm.sh" ]; then
    source "$NVM_DIR/nvm.sh"
  fi
  if ! command -v node &>/dev/null || [ "$(node -v | cut -d. -f1 | tr -d 'v')" -lt 20 ]; then
    if ! command -v nvm &>/dev/null; then
      echo "[!] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º NVM..."
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
      source "$NVM_DIR/nvm.sh"
    fi
    echo "[!] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js >= 20..."
    nvm install 20
    nvm alias default 20
    nvm use default
  fi

  if ! command -v pip &>/dev/null && ! command -v pip3 &>/dev/null; then
    echo "[!] pip –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    apt update && apt install -y python3-pip || {
      echo "[X] –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ pip"
      exit 1
    }
    ln -sf "$(which pip3)" /usr/bin/pip
  fi
}

run_setup() {
  ensure_node_version
  read -p "–°–∫–æ–ª—å–∫–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –Ω–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å? " COUNT
  echo "[+] –ö–ª–æ–Ω–∏—Ä—É–µ–º GensynFix..."
  rm -rf "$BASE_DIR/GensynFix"
  git clone "$REPO_URL" "$BASE_DIR/GensynFix"
  chmod +x "$BASE_DIR/GensynFix/"*.sh

  for i in $(seq 2 $COUNT); do
    cp -r "$BASE_DIR/GensynFix" "$BASE_DIR/GensynFix$i"
    chmod +x "$BASE_DIR/GensynFix$i/"*.sh
  done

  for i in $(seq 1 $COUNT); do
    FILE="$BASE_DIR/GensynFix"
    [[ $i -gt 1 ]] && FILE="$BASE_DIR/GensynFix$i"

    grep -q "LOGIN_PORT=" "$FILE/run_rl_swarm.sh" || sed -i '1i LOGIN_PORT=${LOGIN_PORT:-3000}' "$FILE/run_rl_swarm.sh"
    sed -i 's|yarn start >> "$ROOT/logs/yarn.log" 2>&1 &|PORT=$LOGIN_PORT yarn start >> "$ROOT/logs/yarn.log" 2>\&1 \&|' "$FILE/run_rl_swarm.sh"
  done

  echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
}

run_login_sequential() {
  ensure_node_version
  get_current_count

  for i in $(seq 1 $COUNT); do
    DIR="$BASE_DIR/GensynFix"
    [[ $i -gt 1 ]] && DIR="$BASE_DIR/GensynFix$i"
    PORT=$((2999 + i))

    echo "[+] –ó–∞–ø—É—Å–∫–∞–µ–º tmux-—Å–µ—Å—Å–∏—é node$i –Ω–∞ –ø–æ—Ä—Ç—É $PORT"
    tmux kill-session -t "node$i" 2>/dev/null || true
    tmux new-session -d -s "node$i" -n run "cd $DIR && LOGIN_PORT=$PORT ./run_rl_swarm.sh"

    echo -n "[*] –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã... "
    while ! tmux capture-pane -t "node$i" -p | grep -q "Started server process"; do
      sleep 1
    done
    echo "OK"

    echo "[+] –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–∞ $PORT"
    TUNNEL_SESSION="tunnel$i"
    tmux kill-session -t "$TUNNEL_SESSION" 2>/dev/null || true
    tmux new-session -d -s "$TUNNEL_SESSION" "ssh -o StrictHostKeyChecking=no -R 80:localhost:$PORT nokey@localhost.run | tee /tmp/tunnel$i.log"

    echo "[*] –û–∂–∏–¥–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏..."
    until LINK=$(grep -o 'https://[^ ]*' /tmp/tunnel$i.log | grep '\.lhr\.life' | head -n1); do
      sleep 5
    done
    echo -e "\n‚û°Ô∏è  –õ–æ–≥–∏–Ω –Ω–æ–¥—ã $i: $LINK"

    read -p "–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ª–æ–≥–∏–Ω–∞ ‚Äî –∂–º–∏ Enter..."

    echo "[+] –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ–±—Ä–æ—Å $TUNNEL_SESSION"
    tmux kill-session -t "$TUNNEL_SESSION" 2>/dev/null || true
  done

  echo "‚è≥ –í—Å–µ –Ω–æ–¥—ã –∑–∞–ª–æ–≥–∏–Ω–µ–Ω—ã. –ñ–¥–µ–º $LOGIN_WAIT_TIMEOUT —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π..."
  sleep $LOGIN_WAIT_TIMEOUT

  for i in $(seq 1 $COUNT); do
    tmux kill-session -t "tunnel$i" 2>/dev/null || true
    tmux kill-session -t "node$i" 2>/dev/null || true
  done
  echo "[‚úì] –í—Å–µ —Å–µ—Å—Å–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã. –ì–æ—Ç–æ–≤–æ –∫ –∑–∞–ø—É—Å–∫—É."
}

run_start() {
  ensure_node_version
  get_current_count

  for i in $(seq 1 $COUNT); do
    DIR="$BASE_DIR/GensynFix"
    [[ $i -gt 1 ]] && DIR="$BASE_DIR/GensynFix$i"
    chmod +x "$DIR/auto_restart.sh" 2>/dev/null || true
  done

  if [ ! -e /usr/bin/python ]; then
    ln -s /usr/bin/python3 /usr/bin/python
  fi
  SESSION="gensyn_start"
  tmux kill-session -t $SESSION 2>/dev/null || true

  for i in $(seq 1 $COUNT); do
    DIR="$BASE_DIR/GensynFix"
    [[ $i -gt 1 ]] && DIR="$BASE_DIR/GensynFix$i"
    PORT=$((2999 + i))
    CMD="cd $DIR && LOGIN_PORT=$PORT ./auto_restart.sh"

    if [[ $i -eq 1 ]]; then
      tmux new-session -d -s $SESSION -n node$i -x 800 -y 100 "$CMD"
    else
      tmux split-window -t $SESSION -h "$CMD"
    fi
  done

  tmux select-layout -t $SESSION tiled
  tmux attach -t $SESSION
}

run_update() {
  ensure_node_version
  get_current_count

  if [ -d "$BASE_DIR/GensynFix/.git" ]; then
    echo "[+] –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ø–∞–ø–∫—É GensynFix –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    pushd "$BASE_DIR/GensynFix" >/dev/null
    if ! git pull --ff-only; then
      echo "[!] –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å fast-forward pull, –≤—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
      git fetch origin
      git reset --hard origin/$(git rev-parse --abbrev-ref HEAD)
    fi
    popd >/dev/null
  else
    echo "[!] –ü–∞–ø–∫–∞ $BASE_DIR/GensynFix –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git‚Äë—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ."
  fi

  echo "[+] –û–±–Ω–æ–≤–ª—è–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã GensynFix..."
  for i in $(seq 2 $COUNT); do
    DEST="$BASE_DIR/GensynFix$i"
    if [ -d "$DEST" ]; then
      echo "[+] –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ $DEST"
      rsync -a \
        --exclude='.git' \
        --exclude='swarm.pem' \
        --exclude='modal-login/temp-data/' \
        "$BASE_DIR/GensynFix/" "$DEST/"
      chmod +x "$DEST/auto_restart.sh"
    fi
  done

  for i in $(seq 1 $COUNT); do
    FILE="$BASE_DIR/GensynFix"
    [[ $i -gt 1 ]] && FILE="$BASE_DIR/GensynFix$i"
    if [ -f "$FILE/run_rl_swarm.sh" ]; then
      grep -q "LOGIN_PORT=" "$FILE/run_rl_swarm.sh" || sed -i '1i LOGIN_PORT=${LOGIN_PORT:-3000}' "$FILE/run_rl_swarm.sh"
      sed -i 's|yarn start >> "$ROOT/logs/yarn.log" 2>&1 &|PORT=$LOGIN_PORT yarn start >> "$ROOT/logs/yarn.log" 2>\&1 \&|' "$FILE/run_rl_swarm.sh"
    fi
  done

  echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ."
}

while true; do
  show_menu
  read -p "–í—ã–±–µ—Ä–∏ [1-6]: " CHOICE
  case "$CHOICE" in
    1) run_setup ;;
    2) run_login_sequential ;;
    3) run_start ;;
    4)
      echo "–£–¥–∞–ª–∏—Ç—å –í–°–Å (y/N)?"
      read -r YES
      if [[ "$YES" =~ ^[Yy]$ ]]; then
        echo "üíÄ –£–±–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å GensynFix..."
        pkill -f GensynFix || true
        pkill -f run_rl_swarm.sh || true
        pkill -f auto_restart.sh || true
        pkill -f yarn || true
        pkill -f node || true
        pkill -f tmux || true

        echo "üßπ –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø–∞–ø–∫–∏ GensynFix..."
        shopt -s nullglob
        rm -rf /root/GensynFix*

        echo "‚úÖ –í—Å—ë —É–¥–∞–ª–µ–Ω–æ"
      else
        echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
      fi
      ;;
    5) run_update ;;
    6) exit 0 ;;
    *) echo "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä" ;;
  esac
done
